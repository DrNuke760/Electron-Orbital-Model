import numpy as np
import math
import turtle


### Particle Start
rx = 0
ry = 210

vx =1
vy = 0

E1 = 13.69
E2 = 3.422
#c = -1.0
N = 719.982 #Align order of magnitude for Force

time = 0.0
step = 0.01
duration = 10000

#Particle 1
rx1=0
ry1=52.5
vx1=vx
vy1=vy
screen = turtle.getscreen()
p1 = turtle.Turtle()
p1.shape("circle")
p1.color("red")
p1.pencolor("red")
p1.shapesize(0.25,0.25,0)
p1.penup()

p1.goto(rx1, ry1)
p1.pendown()

#Particle 2
rx2=rx
ry2=ry
vx2=vx
vy2=vy
screen = turtle.getscreen()
p2 = turtle.Turtle()
p2.shape("circle")
p2.color("blue")
p2.pencolor("blue")
p2.shapesize(0.25,0.25,0)
p2.penup()

p2.goto(rx2, ry2)
p2.pendown()

while time < duration:
    
    #Particle 1
    r_mag1 = math.sqrt((rx1 ** 2) + (ry1 ** 2))
    theta1 = math.atan2(ry1, rx1)
    
    F1 = (719.0158464 / r_mag1) - E1     # Buoyancy
    
    Fx1 = F1 * math.cos(theta1)
    Fy1 = F1 * math.sin(theta1)

    vxf1 = vx1 + Fx1 * step
    vyf1 = vy1 + Fy1 * step
    
    rxf1 = rx1 + vxf1 * step
    ryf1 = ry1 + vyf1 * step

    rx1 = rxf1
    ry1 = ryf1
    
    vx1 = vxf1
    vy1 = vyf1

    #Particle 2
    r_mag2 = math.sqrt((rx2 ** 2) + (ry2 ** 2))
    theta2 = math.atan2(ry2, rx2)
    
    F2 = (719.0158464 / r_mag2) - E2     # Buoyancy
    
    Fx2 = F2 * math.cos(theta2)
    Fy2 = F2 * math.sin(theta2)

    vxf2 = vx2 + Fx2 * step
    vyf2 = vy2 + Fy2 * step
    
    rxf2 = rx2 + vxf2 * step
    ryf2 = ry2 + vyf2 * step

    rx2 = rxf2
    ry2 = ryf2
    
    vx2 = vxf2
    vy2 = vyf2
    
    time += step
    p1.goto(rx1, ry1)
    p2.goto(rx2, ry2)
    
        
        
